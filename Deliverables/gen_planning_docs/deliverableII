Deliverable II

Part 1

1.1 Purpose
The product being discussed in this SRS is Disco Event App release version 1 as this will be the first release of this software.  This software will have two interfaces, a web interface used by organizations and departments and a android interface used by students. The web interface will have the capability of users creating profiles and events for thier organization while the android interface will allow students to view event on a calendar view or search for specific events through tags. 

1.2 Documentation Convention
******************<Describe any standards or typographical conventions that were followed when writing this SRS, 
such as fonts or highlighting that have special significance>*******************************
In this SRS document every requirement statement has its own priority. 

1.3 Intended Audience and Reading Suggestions
This document is intended for project managers, team developers, testers, and document writers to read because it will help them in understanding the requirements of the software. The rest of this SRS contains an overal description, the systems' features, external interface requirements, and other requirements. It is suggested to read this document beginning with the overview sections and proceeding through the sections that are most pertinent to each reader.  

1.4 Project Scope
The system that we are developing will allow Engineering Organizations and UNT Departments to submit their events through a web page. In order to do this the Organizations/Departments will need to create an account on the webpage. By creating an account the organizations/departments will be creating an information page about their group. This information page will include their name, a description of what they do, their contact information, links to their different social medias, and a picture of their choice. After they create an account they will be able to submit an event. The event application asks for the date, details, description, major/s the event covers, and a picture for the event. Once the event is submitted or edited, it will need to get approval by an administrator of the website before it will be posted to the app. 
The next part of our project is an app that displays the events that the organizations/departments submitted. This app is specifically made for the purpose of tablets being set around Discovery Park that students will be allowed to access and see what events are happening. Students will also be able to download the app onto their personal devices. This app will have all of the events displayed on a calendar view. It will also have a menu where the user can look at the different events by categories. These categories will be the major or department the event is associated with. For example, if the event is a cybersecurity event, it will be under the category of Computer Science. We plan on implementing a search bar where the user can search the for events through key terms. If the app has not been in use for 3 minutes we plan to have it run a slideshow of all of the events.
The goal of our application is to make it easier for user to find events that are related to their interest and help organizations promote their events. The benifits of this application is that student will easily be able to search for events through thier phones. This will help Engineering students become more active in thier schools and help the turn out rate to organization's events. 

1.5 References
************************Other people need to put in their references***********************************************
<List any other documents or Web addresses to which this SRS refers. These may include user interface style guides,
contracts, standards, system requirements specifications, use case documents, or a vision and scope document. Provide 
enough information so that the reader could access a copy of each reference, including title, author, version number,
date, and source or location.>
UML Documentation:
Flores, Jose. “Calendar Application ( Class Diagram (UML)).” Creately, Cinergix Pty. Ltd, 2013, creately.com/diagram/example/hr0vxdcb/Calendar%20Application.
Used as a reference when creating the Android class diagram.

NikhilRcop. “Sequence Diagram for Android Application That Uses NFC.” Uml - Sequence Diagram for Android Application That Uses NFC - Stack Overflow, 26 Apr. 2015, stackoverflow.com/questions/29882661/sequence-diagram-for-android-application-that-uses-nfc.
Used as a reference when creating both th Android and Django sequence diagrams. 

To create all of the UML diagrams this SRS used the in class lecture notes as the basis for what each different componet of the diagrams are and how they are used. From this we used the above resources help specify our documents to the development tools we are using. 

2.Overall Description
2.1Product Perspective
<Describe the context and origin of the product being specified in this SRS. For example, state whether this product is a follow-on member of a product family, a replacement for certain existing systems, or a new, self-contained product. If the SRS defines a component of a larger system, relate the requirements of the larger system to the functionality of this software and identify interfaces between the two. A simple diagram that shows the major components of the overall system, subsystem interconnections, and external interfaces can be helpful.>

Disco events is aimed to be a more accessible and easier to navigate version of OrgSync. DiscoEvents is an event tracking app specificallly for UNT engineering students at discovery park. We, Team Novus, saw a need that required to be fulfilled for all students. Discovery Park is a large, and diverse campus filled with opportunities for students. There are often multiple events a day at Discovery park. Some may be run by departments, other by organizations. DiscoEvent is meant to be the mobile solution to being involved at Discovery Park by serving as a hub to display all the events going on on any given day at Discovery Park. DiscoEvents is not affiliated with OrgSync and neither will it hold all of its features. 
2.2Product Features
<Summarize the major features the product contains or the significant functions that it performs or lets the user perform. Details will be provided in Section 3, so only a high level summary  is needed here. Organize the functions to make them understandable to any reader of the SRS. A picture of the major groups of related requirements and how they relate, such as a top level data flow diagram or a class diagram, is often effective.>

DiscoEvents major features are:
an interactive calendar, 
an organizations page,
and a search bar. 

The interactive calendar is a swipeable and clickable calendar. Based on the given day the user clicks on, a pop up will be created that will display all of the events going on on that day along with some basic information about the events. 
The organizations page is a scrollable page displaying all of the discovery park organizations registered through DiscoEvents. Upon selecting an organization, the user will be taken to a page for the organization. The page will display a photo for the group, basic group information, as well as future events for the group. 
The search bar searches all of the future events in discovery park and returns the event information to the user. The search function will work in two ways. The first is a basic search, matching with anything that is searched. The other is a search by tags, in which users will be able to select the tags that have been used to descrbe the future events, and results will be given based on the tags. 

2.3User Classes and Characteristics
<Identify the various user classes that you anticipate will use this product. User classes may be differentiated based on frequency of use, subset of product functions used, technical expertise, security or privilege levels, educational level, or experience. Describe the pertinent characteristics of each user class. Certain requirements may pertain only to certain user classes. Distinguish the favored user classes from those who are less important to satisfy.>

Student user class: This group will encompass the average Discovery Park student. Their use of the app will be to gain information of the events going on, as well as familiarize themselves with the application. The anticipated use for this user class is 2-4 uses of the app per week with a max of 1 minute per use. This user class will be our main class, and our app will be built primarily for this audience.

Organization user class: Depertments and organizations may submit their events to DiscoEvents so their events will be available for students to see. Their use will be to spread awareness of their events and gain attendance for their respective events. The anticipated use for this user class is 1 use a week with a max of 5 minute oer useage to submit an event. This is not our main user class, however their onvolvement is crucial to filling the DiscoEvents app with data. 

2.4Operating Environment
<Describe the environment in which the software will operate, including the hardware platform, operating system and versions, and any other software components or applications with which it must peacefully coexist.>

The software will operate on the Android OS. It will be developed for Android verions 4.0 and above. This is because over 90% of android users run the aforementioned OS, allowing us to reach a large amount of android users. The app will require 20 megabytes of storage to be saved and installed on the phone. 

2.5Design and Implementation Constraints
<Describe any items or issues that will limit the options available to the developers. These might include: corporate or regulatory policies; hardware limitations (timing requirements, memory requirements); interfaces to other applications; specific technologies, tools, and databases to be used; parallel operations; language requirements; communications protocols; security considerations; design conventions or programming standards (for example, if the customer’s organization will be responsible for maintaining the delivered software).>

Our biggest design and implementation constraint is our inexperience. We have decided to undertake this project in Android Studio and Django to grow our knowledge in the process of creating this app. What this means is that we may not be able to produce the finest or most polished product. However we intend to produce a strong application with all of the requirements specified in this document. 
2.6User Documentation
<List the user documentation components (such as user manuals, on-line help, and tutorials) that will be delivered along with the software. Identify any known user documentation delivery formats or standards.>

Within the application itself, we will have a help section. The help section will cover the basic uses of the application, how to search, and how to report bugs. Along with it will be a FAQ section, and finally, an email that will be available for users to contact with any further inquiries or help needs that had not veen satiflised with the built in help. 

2.7Assumptions and Dependencies
<List any assumed factors (as opposed to known facts) that could affect the requirements stated in the SRS. These could include third-party or commercial components that you plan to use, issues around the development or operating environment, or constraints. The project could be affected if these assumptions are incorrect, are not shared, or change. Also identify any dependencies the project has on external factors, such as software components that you intend to reuse from another project, unless they are already documented elsewhere (for example, in the vision and scope document or the project plan).>

4.1 User Interfaces
The PC app will have a log in/log out button as well as interfaces to post the event, to view the events you've posted, and to edit/delete the events. The Android app will have a menu on the bottom of every page showing home, search by tag, search by organization, and calendar buttons. Home button sends the user back to home page, search by tag lets the user choose which tag to include on the event search results, search by organization lets users to look up events by organization, and calendar shows a calendar that lets people search events by date.
4.2 Hardware Interfaces
In order for the Android app to run, it must have KitKat or a more current software.
In order for the PC app to run, it must have access to the internet browser and connect to the internet
The PC app will allow creation of accounts and submitting events, and the Android app will receive and show events that were entered by the PC app.
4.3 Software interfaces
The PC version of the app will be using any OS that can run the web browser, it identifys the user accounts and the event that is being posted, so people will know which account will be posting the new event. Event will be monitored by the admins and only the verified events will be sent to Android app. The Android app will require android to function, it has the purpose of showing the events on the app, as well as its menus and the event details and it will receive verified events from the PC app.
4.4 Communication interfaces
This app will use the communication functions of a web browser, and we will use HTTP for this app on the PC side, the app will also use a database to communicate between PC and android. 

5.1Performance Requirements
Performance requirement when pulling data for calandar:
The calandar view will be the resting view of this application. This means that when this view first appears it will need to pull data from the database about the events happening in the current month that it is. When the month is switch by the user, the calandar will need to display the selected months' data. This means that the software will need to be able to pull from the database qickly and retreive the right information.

Performance requirement when pulling data for event or organization information view:
The event and organization view will only need information to be pulled from the database one time. This information will need to be pulled in real time when the user asks for it. 

Performance requirement when tags are selected
When the user selects tags to help their searching process the system will need to search for events or organizations that fit these tags and switch views. The new view will either display a list of the different events and organizations that contain any of those tags or will dispay an error message. The database will need to look through all of the tags to return the events and organizations that fit the tags in real time. 

5.2 Safety Requirements
Misinformation Requirements
The only harm that can come with using this application is misinformation. If misinformation is found then the event or organization will be set as inactive on the database and thus will not show up on the android app. After this an email will be sent out to the creators of this event. To safegaurd from this we will need to set up an administrator access to the website. The administrators of the website will be able to review the events before they are set to activin in the database. There are no external policies or regulations that state safety issues that affect the product’s design or use or any safety certifications that must be satisfied.

5.3Security Requirements
Database Security Requirements
The safty protacal we will need to take with this product are for the database. We will need to make secure our database from hackers. This includes making sure the queres into the database do not leave any openings for hackers to change, input, or drop data.

User Identity Authentication
The web system will have a log in screen where the users will have to enter their log in information in order to access their information or create a new event. This information will be stored in the database and incripted. If the log in information matches what is in the database then the user is allowed to log in. 

5.4Software Quality Attributes
Some important quality characteristics for the product are correctness, maintainability, and usability. Correctness of the product is important because it if the information on our application is consistently wrong users will stop relying on our application. The correctness of our application should be that 85% of the information on our app is correct and 100% of the data pull from the database is the correct data. The software needs to be maintainable for the administrators so that the events are up to date and new events are added to the adroid app within 48 hours of the information being put into our database. The usability of our apps must be easy in the sense that the user must have an easy time travering through the apps. Our applications should allow the user to find any peice of data within 5 clicks. 

Part 2 UML Documents
Class Diagram
Sequence Diagram
Use Case Diagram (at least on normal case and one error case)

Part 3 Test plan
Test case 1: PC account registration
Incorrect input: Missing fields or fields are already in database
Pass criteria: Throws an error showing which of required fields are missing or are duplicates of already existing acount
Correct input: Filled fields and no fields are the same as the ones in the database as duplicates
Pass criteria: The new account's info should be created in the database

Test case 2: PC login
Incorrect input: Missing or mismatched username/password
Pass criteria: It should give out an error saying that the username/password does not match the ones in database
Correct input: Filled required field with matching username/password
Pass criteria: It should successfully login the account

Test case 3: Event creation
Incorrect input: Missing fields
Pass criteria: Throws an error showing which of required fields are missing
Correct input: Filled fields
Pass criteria: The new event's info should be created in the database

Test case 4: Event viewing
Pass criteria: The event should show up on the android app after event is published from the PC

Part 4 Updated risk management
Lack of experience with Android/Django
The risk management that we developed at the beginning of the project is still applicable currently.

Losing a member
The risk management that we developed at the beginning of the project is still applicable currently.

Bad communication
The risk management that we developed at the beginning of the project is still applicable currently.

Conflicting code
We will check if there are redundant or conflicting code that does not really contribute to the program itself.
If there are redundant or conflicting codes, we should comment it out and then run the program again to see if program still works, and only delete after knowing that program works without the redundant or conflicting code.
We can talk to each other to know which cunk of code does what so there won't be much more redundant or conflicting code to be made.

Planning problems
We can check if there are any loopholes or exploits on our project plans and if any, we can patch it up.
If there are any loopholes, exploits, or unforseen problems on the plans, we can adjust the plan to get rid of the problems or we can start a new plan together using the old plan as guideline.
We will check the plan more throughly so there will be less of a risk of unexpected problems.

Part 5: updated project plan
for this section, include the same schedule as before as we are still on schedule and aim to continue to use this schedule. The section below can be included

The development schedule for DiscoEvents has been on track so far. We saw no need to make any modifications from the schedule we had used on deliverable 1. Assuming any issue arises, changes to the schedule are still viable. 

Part 6

9/21/17
Location: class

Present: 
Brandi Werner
Kaytlin Lafleur
Daniel Jimenez
Tsung-Han Hsieh

Agenda: 
Elicitation W.S.
Requirement analysis
Deliverable 2 tasks
Progress on deliverable 3

Elicitation W.S. - we received extremely helpful insight into our application from our elicitors. They outlined certain aspects of this calendar they believed to be important based on their role as either a common engineering student or an organization leader. They stressed the importance of
> App notifications
> Individual tags for search
> Inclusion of an RSVP form on the web app

We received a lot of other information that has the possibility of being included in our project, however it may not meet the scope we are aiming for. Some of these are user profiles, event reminders, and more social media-like aspects. While we did like some of these ideas, it is not under the type of application we had planned to make.

Requirement analysis - After reviewing the elicitators information, we did a quick brainstorm of the minimum baseline requirements we would like to work towards in our app such as

Deliverable 2 tasks - We reviewed the requirements for deliverable 2 and have split them accordingly. Within the first section (which we anticipate to be the largest based on the template given in class), we split that task into subtasks among us as well. Although early, we did this to have a general idea of our roles and in case anybody had the chance to work ahead. 

Progress on deliverable 3 - as a quick touch-and-go conversation, we made sure everybody was researching into their respective part for the creation of the actual application.


9/26/17
Location: class

Present: 
Brandi Werner
Kaytlin Lafleur
Daniel Jimenez
Tsung-Han Hsieh

Agenda: 
Increased Github use
Django team
Layout of app
Deliverable 2 planning/progress
Review timeline

increased Github Use- we would like to shift our focus away from google docs use and focus on github in order to become accustomed once we move to Github for the coding portion of the project

Django Team - touched base with the django team to determine progress on learning. Progress is currently not very advanced, however there is still time to learn.

Layout of app - as a group, we designed and drew out how our android application will look. It will have 3 pages - a calendar page, an organizations page, and a search page. There will be a static menu bar at the bottom. A home icon will also be included, which will lead to a page showing all events going on today. Layout od django app is not of critical importance.

Deliverable 2 planning/progress - We reiterated our roles and responsibilities for this second deliverable. Everything was in line, and writing for the deliverable will commence after class as decided by group.

Review timeline - while taking a close look at the timeline, we have determined that as of so far we are on track. However, we may make slight modifications and expansions to the schedule in order to further guide us in completing the project. 

9/28/17
Location: class

Present: 
Brandi Werner
Kaytlin Lafleur
Daniel Jimenez
Tsung-Han Hsieh

Agenda: 
Deliverable 2 Section 1
Further Deliverable 3 planning

Deliverable 2 Section 1: based on the templatae provided by our instructor, we reviewed the most in depth section of deliverable two, which is section one. Based upon the roles we felt most comfortable with, we split section one into four parts amongst our members. Brandi completing template part 1, Daniel completing template part 2, Kaytlin completing template part 3, and Tsung-Han completing template part 4. 

Further Deliverable 3 planning: Brandi and Kaytlin put forth their respective ideas on the design and usability aspects of our app. As a group we decided what aspects to implement. One of these is many links between pages. For example from the calendar view you could see an event by IEEE. From there you could click on the event and it will take you to the IEEE organization page. Other details are minisucle design choices. 

10/5/17
Location: class

Present: 
Brandi Werner
Kaytlin Lafleur
Daniel Jimenez
Tsung-Han Hsieh

Agenda: 
Deliverable 2 tips from teacher
Deliverable 2 touch and go

Deliverable 2 tips from teacher: our class lesson today was focused on deliverable 2. 
Tips we gained are: 
be precise, clear and unambiguous,
write readable, complete sentences,
write in specific words, as opposed to vague.

Deliverable 2 touch and go: as a quick group meeting, we discussed our own progress on the deliverable. By this point we are nearly finished, and have to focus more on minute details as well as document formatting. No group member is behind on their role. 

Part 7 Progress report summarizing the status of your project
The progress of our project is going well. The reason we say this is because we are right on track with the timeline we made on deliverable 1. Just last week we finish researching and studying both android and Django requirements. This upcoming and the following week will get the base and core functionality of our software programed. 
All our team members have a good grasp on what they need to be working on and the pace they need to get their task done. We have accomplished this through good communication and having meetings twice a week. The Android programmers are working closely together and have broken their task up between themselves. One of the Android developers will be working on the calendar view while the other will focus on the searching aspect of the program including tags. The Django programmers will be working together on all aspects of the web application front. After the next two weeks we will be able to start linking the two development platforms together through SQLlite and start user testing.
At this point in time we are all feeling comfortable with the pace we have given ourselves and feel that we will be able to accomplish this program in a reasonable amount of time. The only struggle that we might have in the future is if one of our development tools has a limitation that our developers cannot overcome or solve. If this happens we have already discussed about different alternatives of what to do and how to solve these problems. One of the last resorts is to change development tools.
